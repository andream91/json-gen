{
    "headers": [
        "Cell line",
        "Gene pair symbols",
        "Gene pair EnsIDs",
        "Exon pair",
        "Chromosomes",
        "Description",
        "Counts of common mapping reads",
        "Spanning pairs",
        "Spanning unique reads",
        "Longest anchor found",
        "Fusion finding method",
        "Fusion point for gene 1 (5end fusion partner)",
        "Fusion point for gene 2 (3end fusion partner)",
        "Fusion sequence",
        "Predicted effect",
        "Predicted fused transcripts",
        "Predicted fused proteins"
    ],
    "row": [
        "<td md-cell><p>{{el.cell_line.cell_line}}</p></td>",
        "<td md-cell><p>{{el.gene1.symbol}}<br>{{el.gene2.symbol}}</p></td>",
        "<td md-cell><p>{{el.gene1.gene_id}}<br>{{el.gene2.gene_id}}</p></td>",
        "<td md-cell><p>{{el.exon1.exon_id}}<br>{{el.exon2.exon_id}}</p></td>",
        "<td md-cell><p>{{el.chromosome1.chromosome}}:{{el.chromosome1.strand}}<br>{{el.chromosome2.chromosome}}:{{el.chromosome2.strand}}</td>",
        "<td md-cell><p>{{el.fusion.description}}</p></td>",
        "<td md-cell><p>{{el.fusion.common_mapping_reads}}</p></td>",
        "<td md-cell><p>{{el.fusion.spanning_pairs}}</p></td>",
        "<td md-cell><p>{{el.fusion.spanning_unique_reads}}</p></td>",
        "<td md-cell><p>{{el.fusion.longest_anchor_found}}</p></td>",
        "<td md-cell><p>{{el.fusion.fusion_finding_method}}</p></td>",
        "<td md-cell><p>{{el.fusion.fusion_point_1}}</p></td>",
        "<td md-cell><p>{{el.fusion.fusion_point_2}}</p></td>",
        "<td md-cell><p>{{el.fusion.fusion_sequence}}</p></td>",
        "<td md-cell><p>{{el.fusion.predicted_effect}}</p></td>",
        "<td md-cell><p><ng-repeat ng-repeat='cp in el.couple_tp track by $index'>{{cp.t1.transcript_id}}:{{cp.t1.position}}/{{cp.t2.transcript_id}}:{{cp.t2.position}}<br></ng-repeat></p></td>",
        "<td md-cell><p><ng-repeat ng-repeat='prot in el.couple_tp track by $index'>{{prot.p.id}}<br></ng-repeat></p></td>"
    ],
    "queries": {
        "gene": {
            "gene_specified_partner": [
                "match (c:CellLine)-[:HAPPEN]->(f:Fusion) where c.cell_line=~'CCLE_095' with c,f order by ID(f) match (g1:Gene)-[:HAD]->(f)-[:WITH]->(g2:Gene) ",
                "where (g1.symbol=~'POMP' and g1.gene_id=~'.*' and g1.fusion_partner='5end') and (g2.symbol=~'FLT3' and g2.gene_id=~'.*' and g2.fusion_partner='3end') ",
                "with c,f,g1,g2 ",
                "match (f)-[:AT_CHROMOSOME]->(ch1:Chromosome)-[:OF_GENE]->(g1) ",
                "with c,f,g1,g2,ch1 ",
                "match (f)-[:AT_CHROMOSOME]->(ch2:Chromosome)-[:OF_GENE]->(g2) ",
                "with c,f,g1,g2,ch1,ch2 ",
                "optional match (t1:Transcript)-[:IN_COUPLE]->(co:Couple)-[:WITH_OTHER_TRANSCRIPT]->(t2:Transcript),(co)-[:WITH_PROTEIN]->(p:Protein),(f)-[:WITH_TRANS_COUPLE]->(co) ",
                "with c,f,g1,g2,ch1,ch2,collect({t1:t1,t2:t2,co:co,p:p}) as couple_tp ",
                "optional match (f)-[:AT_EXON]->(e1:Exon)-[:IN_GENE]->(g1) ",
                "with c,f,g1,g2,ch1,ch2,couple_tp,e1 ",
                "optional match (f)-[:AT_EXON]->(e2:Exon)-[:IN_GENE]->(g2) ",
                "with count(f) as total ",
                " ",
                "match (c:CellLine)-[:HAPPEN]->(f:Fusion) where c.cell_line=~'CCLE_095' ",
                "with total,c,f order by ID(f)",
                "match (g1:Gene)-[:HAD]->(f)-[:WITH]->(g2:Gene) ",
                "where (g1.symbol=~'POMP' and g1.gene_id=~'.*' and g1.fusion_partner='5end') and (g2.symbol=~'FLT3' and g2.gene_id=~'.*' and g2.fusion_partner='3end') ",
                "with total,c,f,g1,g2 ",
                "match (f)-[:AT_CHROMOSOME]->(ch1:Chromosome)-[:OF_GENE]->(g1) ",
                "with total,c,f,g1,g2,ch1 ",
                "match (f)-[:AT_CHROMOSOME]->(ch2:Chromosome)-[:OF_GENE]->(g2) ",
                "with total,c,f,g1,g2,ch1,ch2 order by ID(f) ",
                "optional match (t1:Transcript)-[:IN_COUPLE]->(co:Couple)-[:WITH_OTHER_TRANSCRIPT]->(t2:Transcript),(co)-[:WITH_PROTEIN]->(p:Protein),(f)-[:WITH_TRANS_COUPLE]->(co) ",
                "with total,c,f,g1,g2,ch1,ch2,collect({t1:t1,t2:t2,co:co,p:p}) as couple_tp ",
                "optional match (f)-[:AT_EXON]->(e1:Exon)-[:IN_GENE]->(g1) ",
                "with total,c,f,g1,g2,ch1,ch2,couple_tp,e1 ",
                "optional match (f)-[:AT_EXON]->(e2:Exon)-[:IN_GENE]->(g2) ",
                "with total,c,f,g1,g2,ch1,ch2,couple_tp,e1,e2 ",
                "return {cell_line: c,fusion: f,gene1: g1,gene2: g2, chromosome1: ch1,chromosome2: ch2,couple_tp: couple_tp, exon1: e1, exon2: e2, total: total}  order by ID(f) skip {query}.skip limit {query}.limit"
            ],
            "gene_any_partner": [
                "match (c:CellLine)-[:HAPPEN]->(f:Fusion) where c.cell_line=~'CCLE_095' with c,f order by ID(f) match (g1:Gene)-[:HAD]->(f)-[:WITH]->(g2:Gene) ",
                "where (g1.symbol=~'.*' and g1.gene_id=~'.*' and g1.fusion_partner='5end') or (g2.symbol=~'.*' and g2.gene_id=~'.*' and g2.fusion_partner='3end') ",
                "with c,f,g1,g2 ",
                "match (f)-[:AT_CHROMOSOME]->(ch1:Chromosome)-[:OF_GENE]->(g1) ",
                "with c,f,g1,g2,ch1 ",
                "match (f)-[:AT_CHROMOSOME]->(ch2:Chromosome)-[:OF_GENE]->(g2) ",
                "with c,f,g1,g2,ch1,ch2 ",
                "optional match (t1:Transcript)-[:IN_COUPLE]->(co:Couple)-[:WITH_OTHER_TRANSCRIPT]->(t2:Transcript),(co)-[:WITH_PROTEIN]->(p:Protein),(f)-[:WITH_TRANS_COUPLE]->(co) ",
                "with c,f,g1,g2,ch1,ch2,collect({t1:t1,t2:t2,co:co,p:p}) as couple_tp ",
                "optional match (f)-[:AT_EXON]->(e1:Exon)-[:IN_GENE]->(g1) ",
                "with c,f,g1,g2,ch1,ch2,couple_tp,e1 ",
                "optional match (f)-[:AT_EXON]->(e2:Exon)-[:IN_GENE]->(g2) ",
                "with count(f) as total ",
                " ",
                "match (c:CellLine)-[:HAPPEN]->(f:Fusion) where c.cell_line=~'CCLE_095' ",
                "with total,c,f order by ID(f)",
                "match (g1:Gene)-[:HAD]->(f)-[:WITH]->(g2:Gene) ",
                "where (g1.symbol=~'.*' and g1.gene_id=~'.*' and g1.fusion_partner='5end') or (g2.symbol=~'.*' and g2.gene_id=~'.*' and g2.fusion_partner='3end') ",
                "with total,c,f,g1,g2 ",
                "match (f)-[:AT_CHROMOSOME]->(ch1:Chromosome)-[:OF_GENE]->(g1) ",
                "with total,c,f,g1,g2,ch1 ",
                "match (f)-[:AT_CHROMOSOME]->(ch2:Chromosome)-[:OF_GENE]->(g2) ",
                "with total,c,f,g1,g2,ch1,ch2 order by ID(f)",
                "optional match (t1:Transcript)-[:IN_COUPLE]->(co:Couple)-[:WITH_OTHER_TRANSCRIPT]->(t2:Transcript),(co)-[:WITH_PROTEIN]->(p:Protein),(f)-[:WITH_TRANS_COUPLE]->(co) ",
                "with total,c,f,g1,g2,ch1,ch2,collect({t1:t1,t2:t2,co:co,p:p}) as couple_tp ",
                "optional match (f)-[:AT_EXON]->(e1:Exon)-[:IN_GENE]->(g1) ",
                "with total,c,f,g1,g2,ch1,ch2,couple_tp,e1 ",
                "optional match (f)-[:AT_EXON]->(e2:Exon)-[:IN_GENE]->(g2) ",
                "with total,c,f,g1,g2,ch1,ch2,couple_tp,e1,e2 ",
                "return {cell_line: c,fusion: f,gene1: g1,gene2: g2, chromosome1: ch1,chromosome2: ch2,couple_tp: couple_tp, exon1: e1, exon2: e2, total: total}  order by ID(f) skip {query}.skip limit {query}.limit"
            ]
        },
        "chromosome": {
            "chromosome": [
                "match (c:CellLine)-[:HAPPEN]->(f:Fusion)",
                "where c.cell_line=~'CCLE_095'",
                "with c,f order by ID(f)",
                "match (g1:Gene)-[:HAD]->(f)-[:WITH]->(g2:Gene)",
                "with c,f,g1,g2",
                "match (f)-[relc1:AT_CHROMOSOME]->(ch1:Chromosome)-[:OF_GENE]->(g1),(f)-[relc2:AT_CHROMOSOME]->(ch2:Chromosome)-[:OF_GENE]->(g2)",
                "where (ch1.chromosome=~'11' and ch1.strand=~'.*' and (relc1.fusion_point>=35048842 and relc1.fusion_point<=999999999)) or (ch2.chromosome=~'11' and ch2.strand=~'.*' and (relc2.fusion_point>=35048842 and relc2.fusion_point<=999999999))",
                "optional match (t1:Transcript)-[:IN_COUPLE]->(co:Couple)-[:WITH_OTHER_TRANSCRIPT]->(t2:Transcript),(co)-[:WITH_PROTEIN]->(p:Protein),(f)-[:WITH_TRANS_COUPLE]->(co)",
                "with c,f,ch1,ch2,g1,g2,collect(distinct {t1:t1,t2:t2,co:co,p:p}) as couple_tp",
                "optional match (f)-[:AT_EXON]->(e1:Exon)-[:IN_GENE]->(g1)",
                "with c,f,g1,g2,ch1,ch2,couple_tp,e1",
                "optional match (f)-[:AT_EXON]->(e2:Exon)-[:IN_GENE]->(g2)",
                "with count(f) as total ",
                " ",
                "match (c:CellLine)-[:HAPPEN]->(f:Fusion)",
                "where c.cell_line=~'CCLE_095'",
                "with total,c,f order by ID(f)",
                "match (g1:Gene)-[:HAD]->(f)-[:WITH]->(g2:Gene)",
                "with total,c,f,g1,g2",
                "match (f)-[relc1:AT_CHROMOSOME]->(ch1)-[:OF_GENE]->(g1),(f)-[relc2:AT_CHROMOSOME]->(ch2)-[:OF_GENE]->(g2)",
                "where (ch1.chromosome=~'11' and ch1.strand=~'.*' and (relc1.fusion_point>=35048842 and relc1.fusion_point<=999999999)) or (ch2.chromosome=~'11' and ch2.strand=~'.*' and (relc2.fusion_point>=35048842 and relc2.fusion_point<=999999999))",
                "optional match (t1:Transcript)-[:IN_COUPLE]->(co:Couple)-[:WITH_OTHER_TRANSCRIPT]->(t2:Transcript),(co)-[:WITH_PROTEIN]->(p:Protein),(f)-[:WITH_TRANS_COUPLE]->(co)",
                "with total,c,f,ch1,ch2,g1,g2,collect(distinct {t1:t1,t2:t2,co:co,p:p}) as couple_tp",
                "optional match (f)-[:AT_EXON]->(e1:Exon)-[:IN_GENE]->(g1)",
                "with total,c,f,g1,g2,ch1,ch2,couple_tp,e1",
                "optional match (f)-[:AT_EXON]->(e2:Exon)-[:IN_GENE]->(g2)",
                "return {cell_line: c,fusion: f,gene1: g1,gene2: g2, chromosome1: ch1,chromosome2: ch2,couple_tp: couple_tp, exon1: e1, exon2: e2, total: total}  order by ID(f)  skip {query}.skip limit {query}.limit"
            ]
        },
        "exon": {
            "exon_specified_partner": [
                "match (c:CellLine)-[:HAPPEN]->(f:Fusion)",
                "where c.cell_line=~'CCLE_095'",
                "with c,f order by ID(f)",
                "match (g1:Gene)-[:HAD]->(f)-[:WITH]->(g2:Gene)",
                "with c,f,g1,g2",
                "match (f)-[:AT_CHROMOSOME]->(ch1:Chromosome)-[:OF_GENE]->(g1)",
                "with c,f,g1,g2,ch1",
                "match (f)-[:AT_CHROMOSOME]->(ch2:Chromosome)-[:OF_GENE]->(g2)",
                "with c,f,g1,g2,ch1,ch2",
                "optional match (t1:Transcript)-[:IN_COUPLE]->(co:Couple)-[:WITH_OTHER_TRANSCRIPT]->(t2:Transcript),(co)-[:WITH_PROTEIN]->(p:Protein),(f)-[:WITH_TRANS_COUPLE]->(co)",
                "with c,f,g1,g2,ch1,ch2,collect(distinct {t1:t1,t2:t2,co:co,p:p}) as couple_tp",
                "match (f)-[:AT_EXON]->(e1:Exon)-[:IN_GENE]->(g1),(f)-[:AT_EXON]->(e2:Exon)-[:IN_GENE]->(g2)",
                "where (e1.exon_id=~'.*' and e1.strand=~'.*' and e1.fusion_partner=~'5end') and (e2.exon_id=~'.*' and e2.strand=~'.*' and e2.fusion_partner=~'3end')",
                "with count(f) as total",
                " ",
                "match (c:CellLine)-[:HAPPEN]->(f:Fusion)",
                "where c.cell_line=~'CCLE_095'",
                "with total,c,f order by ID(f)",
                "match (g1:Gene)-[:HAD]->(f)-[:WITH]->(g2:Gene)",
                "with total,c,f,g1,g2",
                "match (f)-[:AT_CHROMOSOME]->(ch1:Chromosome)-[:OF_GENE]->(g1)",
                "with total,c,f,g1,g2,ch1",
                "match (f)-[:AT_CHROMOSOME]->(ch2:Chromosome)-[:OF_GENE]->(g2)",
                "with total,c,f,g1,g2,ch1,ch2",
                "optional match (t1:Transcript)-[:IN_COUPLE]->(co:Couple)-[:WITH_OTHER_TRANSCRIPT]->(t2:Transcript),(co)-[:WITH_PROTEIN]->(p:Protein),(f)-[:WITH_TRANS_COUPLE]->(co)",
                "with total,c,f,g1,g2,ch1,ch2,collect(distinct {t1:t1,t2:t2,co:co,p:p}) as couple_tp",
                "match (f)-[:AT_EXON]->(e1:Exon)-[:IN_GENE]->(g1),(f)-[:AT_EXON]->(e2:Exon)-[:IN_GENE]->(g2)",
                "where (e1.exon_id=~'.*' and e1.strand=~'.*' and e1.fusion_partner=~'5end') and (e2.exon_id=~'.*' and e2.strand=~'.*' and e2.fusion_partner=~'3end')",
                "return {cell_line: c,fusion: f,gene1: g1,gene2: g2, chromosome1: ch1,chromosome2: ch2,couple_tp: couple_tp, exon1: e1, exon2: e2, total: total}  order by ID(f) skip {query}.skip limit {query}.limit"
            ],
            "exon_any_partner": [
                "match (c:CellLine)-[:HAPPEN]->(f:Fusion)",
                "where c.cell_line=~'CCLE_095'",
                "with c,f order by ID(f)",
                "match (g1:Gene)-[:HAD]->(f)-[:WITH]->(g2:Gene)",
                "with c,f,g1,g2",
                "match (f)-[:AT_CHROMOSOME]->(ch1:Chromosome)-[:OF_GENE]->(g1)",
                "with c,f,g1,g2,ch1",
                "match (f)-[:AT_CHROMOSOME]->(ch2:Chromosome)-[:OF_GENE]->(g2)",
                "with c,f,g1,g2,ch1,ch2",
                "optional match (t1:Transcript)-[:IN_COUPLE]->(co:Couple)-[:WITH_OTHER_TRANSCRIPT]->(t2:Transcript),(co)-[:WITH_PROTEIN]->(p:Protein),(f)-[:WITH_TRANS_COUPLE]->(co)",
                "with c,f,g1,g2,ch1,ch2,collect(distinct {t1:t1,t2:t2,co:co,p:p}) as couple_tp",
                "match (f)-[:AT_EXON]->(e1:Exon)-[:IN_GENE]->(g1),(f)-[:AT_EXON]->(e2:Exon)-[:IN_GENE]->(g2)",
                "where (e1.exon_id=~'.*' and e1.strand=~'.*' and e1.fusion_partner=~'5end') or (e2.exon_id=~'.*' and e2.strand=~'.*' and e2.fusion_partner=~'3end')",
                "with count(f) as total",
                " ",
                "match (c:CellLine)-[:HAPPEN]->(f:Fusion)",
                "where c.cell_line=~'CCLE_095'",
                "with total,c,f order by ID(f)",
                "match (g1:Gene)-[:HAD]->(f)-[:WITH]->(g2:Gene)",
                "with total,c,f,g1,g2",
                "match (f)-[:AT_CHROMOSOME]->(ch1:Chromosome)-[:OF_GENE]->(g1)",
                "with total,c,f,g1,g2,ch1",
                "match (f)-[:AT_CHROMOSOME]->(ch2:Chromosome)-[:OF_GENE]->(g2)",
                "with total,c,f,g1,g2,ch1,ch2",
                "optional match (t1:Transcript)-[:IN_COUPLE]->(co:Couple)-[:WITH_OTHER_TRANSCRIPT]->(t2:Transcript),(co)-[:WITH_PROTEIN]->(p:Protein),(f)-[:WITH_TRANS_COUPLE]->(co)",
                "with total,c,f,g1,g2,ch1,ch2,collect(distinct {t1:t1,t2:t2,co:co,p:p}) as couple_tp",
                "match (f)-[:AT_EXON]->(e1:Exon)-[:IN_GENE]->(g1),(f)-[:AT_EXON]->(e2:Exon)-[:IN_GENE]->(g2)",
                "where (e1.exon_id=~'.*' and e1.strand=~'.*' and e1.fusion_partner=~'5end') or (e2.exon_id=~'.*' and e2.strand=~'.*' and e2.fusion_partner=~'3end')",
                "return {cell_line: c,fusion: f,gene1: g1,gene2: g2, chromosome1: ch1,chromosome2: ch2,couple_tp: couple_tp, exon1: e1, exon2: e2, total: total}  order by ID(f) skip {query}.skip limit {query}.limit"
            ]
        },
        "fusion":{
            "fusion_in_or_out_of_frame": [
                "match (c:CellLine)-[:HAPPEN]->(f:Fusion)",
                "where c.cell_line=~'CCLE_095'",
                "with c,f order by ID(f)",
                "match (g1:Gene)-[:HAD]->(f)-[:WITH]->(g2:Gene) ",
                "where any(x in f.description where x=~ '.*') and any(y in f.fusion_finding_method where y=~'.*') and any(z in f.predicted_effect where z=~'out-of-frame')",
                "match (f)-[:AT_CHROMOSOME]->(ch1:Chromosome)-[:OF_GENE]->(g1)",
                "with c,f,g1,g2,ch1",
                "match (f)-[:AT_CHROMOSOME]->(ch2:Chromosome)-[:OF_GENE]->(g2)",
                "with c,f,g1,g2,ch1,ch2",
                "optional match (t1:Transcript)-[:IN_COUPLE]->(co:Couple)-[:WITH_OTHER_TRANSCRIPT]->(t2:Transcript),(co)-[:WITH_PROTEIN]->(p:Protein),(f)-[:WITH_TRANS_COUPLE]->(co)",
                "with c,f,g1,g2,ch1,ch2,collect(distinct {t1:t1,t2:t2,co:co,p:p}) as couple_tp",
                "optional match (f)-[:AT_EXON]->(e1:Exon)-[:IN_GENE]->(g1)",
                "with c,f,g1,g2,ch1,ch2,couple_tp,e1",
                "optional match (f)-[:AT_EXON]->(e2:Exon)-[:IN_GENE]->(g2)",
                "with count(f) as total",
                " ",
                "match (c:CellLine)-[:HAPPEN]->(f:Fusion)",
                "where c.cell_line=~'CCLE_095'",
                "with total,c,f order by ID(f)",
                "match (g1:Gene)-[:HAD]->(f)-[:WITH]->(g2:Gene) ",
                "where any(x in f.description where x=~ '.*') and any(y in f.fusion_finding_method where y=~'.*') and any(z in f.predicted_effect where z=~'out-of-frame')",
                "match (f)-[:AT_CHROMOSOME]->(ch1:Chromosome)-[:OF_GENE]->(g1)",
                "with total,c,f,g1,g2,ch1",
                "match (f)-[:AT_CHROMOSOME]->(ch2:Chromosome)-[:OF_GENE]->(g2)",
                "with total,c,f,g1,g2,ch1,ch2",
                "optional match (t1:Transcript)-[:IN_COUPLE]->(co:Couple)-[:WITH_OTHER_TRANSCRIPT]->(t2:Transcript),(co)-[:WITH_PROTEIN]->(p:Protein),(f)-[:WITH_TRANS_COUPLE]->(co)",
                "with total,c,f,g1,g2,ch1,ch2,collect(distinct {t1:t1,t2:t2,co:co,p:p}) as couple_tp",
                "optional match (f)-[:AT_EXON]->(e1:Exon)-[:IN_GENE]->(g1)",
                "with total,c,f,g1,g2,ch1,ch2,couple_tp,e1",
                "optional match (f)-[:AT_EXON]->(e2:Exon)-[:IN_GENE]->(g2)",
                "return {cell_line: c,fusion: f,gene1: g1,gene2: g2, chromosome1: ch1,chromosome2: ch2,couple_tp: couple_tp, exon1: e1, exon2: e2, total: total}  order by ID(f) skip {query}.skip limit {query}.limit"
            ],
            "fusion_predicted_effect_1_defined_2_defined": [
                "match (c:CellLine)-[:HAPPEN]->(f:Fusion)",
                "where c.cell_line=~'CCLE_095'",
                "with c,f order by ID(f)",
                "match (g1:Gene)-[:HAD]->(f)-[:WITH]->(g2:Gene) ",
                "where any(x in f.description where x=~ '.*') and any(y in f.fusion_finding_method where y=~'.*') and (f.predicted_effect[0]='CDS(truncated)' and f.predicted_effect[1]='UTR')",
                "match (f)-[:AT_CHROMOSOME]->(ch1:Chromosome)-[:OF_GENE]->(g1)",
                "with c,f,g1,g2,ch1",
                "match (f)-[:AT_CHROMOSOME]->(ch2:Chromosome)-[:OF_GENE]->(g2)",
                "with c,f,g1,g2,ch1,ch2",
                "optional match (t1:Transcript)-[:IN_COUPLE]->(co:Couple)-[:WITH_OTHER_TRANSCRIPT]->(t2:Transcript),(co)-[:WITH_PROTEIN]->(p:Protein),(f)-[:WITH_TRANS_COUPLE]->(co)",
                "with c,f,g1,g2,ch1,ch2,collect(distinct {t1:t1,t2:t2,co:co,p:p}) as couple_tp",
                "optional match (f)-[:AT_EXON]->(e1:Exon)-[:IN_GENE]->(g1)",
                "with c,f,g1,g2,ch1,ch2,couple_tp,e1",
                "optional match (f)-[:AT_EXON]->(e2:Exon)-[:IN_GENE]->(g2)",
                "with count(f) as total",
                " ",
                "match (c:CellLine)-[:HAPPEN]->(f:Fusion)",
                "where c.cell_line=~'CCLE_095'",
                "with total,c,f order by ID(f)",
                "match (g1:Gene)-[:HAD]->(f)-[:WITH]->(g2:Gene) ",
                "where any(x in f.description where x=~ '.*') and any(y in f.fusion_finding_method where y=~'.*') and (f.predicted_effect[0]='CDS(truncated)' and f.predicted_effect[1]='UTR')",
                "match (f)-[:AT_CHROMOSOME]->(ch1:Chromosome)-[:OF_GENE]->(g1)",
                "with total,c,f,g1,g2,ch1",
                "match (f)-[:AT_CHROMOSOME]->(ch2:Chromosome)-[:OF_GENE]->(g2)",
                "with total,c,f,g1,g2,ch1,ch2",
                "optional match (t1:Transcript)-[:IN_COUPLE]->(co:Couple)-[:WITH_OTHER_TRANSCRIPT]->(t2:Transcript),(co)-[:WITH_PROTEIN]->(p:Protein),(f)-[:WITH_TRANS_COUPLE]->(co)",
                "with total,c,f,g1,g2,ch1,ch2,collect(distinct {t1:t1,t2:t2,co:co,p:p}) as couple_tp",
                "optional match (f)-[:AT_EXON]->(e1:Exon)-[:IN_GENE]->(g1)",
                "with total,c,f,g1,g2,ch1,ch2,couple_tp,e1",
                "optional match (f)-[:AT_EXON]->(e2:Exon)-[:IN_GENE]->(g2)",
                "return {cell_line: c,fusion: f,gene1: g1,gene2: g2, chromosome1: ch1,chromosome2: ch2,couple_tp: couple_tp, exon1: e1, exon2: e2, total: total}  order by ID(f) skip {query}.skip limit {query}.limit"
            ],
            "fusion_predicted_effect_1_defined_2_undefined": [
                "match (c:CellLine)-[:HAPPEN]->(f:Fusion)",
                "where c.cell_line=~'CCLE_095'",
                "with c,f order by ID(f)",
                "match (g1:Gene)-[:HAD]->(f)-[:WITH]->(g2:Gene) ",
                "where any(x in f.description where x=~ '.*') and any(y in f.fusion_finding_method where y=~'.*') and (f.predicted_effect[0]='CDS(truncated)' and f.predicted_effect[1]=~'.*')",
                "match (f)-[:AT_CHROMOSOME]->(ch1:Chromosome)-[:OF_GENE]->(g1)",
                "with c,f,g1,g2,ch1",
                "match (f)-[:AT_CHROMOSOME]->(ch2:Chromosome)-[:OF_GENE]->(g2)",
                "with c,f,g1,g2,ch1,ch2",
                "optional match (t1:Transcript)-[:IN_COUPLE]->(co:Couple)-[:WITH_OTHER_TRANSCRIPT]->(t2:Transcript),(co)-[:WITH_PROTEIN]->(p:Protein),(f)-[:WITH_TRANS_COUPLE]->(co)",
                "with c,f,g1,g2,ch1,ch2,collect(distinct {t1:t1,t2:t2,co:co,p:p}) as couple_tp",
                "optional match (f)-[:AT_EXON]->(e1:Exon)-[:IN_GENE]->(g1)",
                "with c,f,g1,g2,ch1,ch2,couple_tp,e1",
                "optional match (f)-[:AT_EXON]->(e2:Exon)-[:IN_GENE]->(g2)",
                "with count(f) as total",
                " ",
                "match (c:CellLine)-[:HAPPEN]->(f:Fusion)",
                "where c.cell_line=~'CCLE_095'",
                "with total,c,f order by ID(f)",
                "match (g1:Gene)-[:HAD]->(f)-[:WITH]->(g2:Gene) ",
                "where any(x in f.description where x=~ '.*') and any(y in f.fusion_finding_method where y=~'.*') and (f.predicted_effect[0]='CDS(truncated)' and f.predicted_effect[1]=~'.*')",
                "match (f)-[:AT_CHROMOSOME]->(ch1:Chromosome)-[:OF_GENE]->(g1)",
                "with total,c,f,g1,g2,ch1",
                "match (f)-[:AT_CHROMOSOME]->(ch2:Chromosome)-[:OF_GENE]->(g2)",
                "with total,c,f,g1,g2,ch1,ch2",
                "optional match (t1:Transcript)-[:IN_COUPLE]->(co:Couple)-[:WITH_OTHER_TRANSCRIPT]->(t2:Transcript),(co)-[:WITH_PROTEIN]->(p:Protein),(f)-[:WITH_TRANS_COUPLE]->(co)",
                "with total,c,f,g1,g2,ch1,ch2,collect(distinct {t1:t1,t2:t2,co:co,p:p}) as couple_tp",
                "optional match (f)-[:AT_EXON]->(e1:Exon)-[:IN_GENE]->(g1)",
                "with total,c,f,g1,g2,ch1,ch2,couple_tp,e1",
                "optional match (f)-[:AT_EXON]->(e2:Exon)-[:IN_GENE]->(g2)",
                "return {cell_line: c,fusion: f,gene1: g1,gene2: g2, chromosome1: ch1,chromosome2: ch2,couple_tp: couple_tp, exon1: e1, exon2: e2, total: total}  order by ID(f) skip {query}.skip limit {query}.limit"
            ],
            "fusion_predicted_effect_1_undefined_2_defined": [
                "match (c:CellLine)-[:HAPPEN]->(f:Fusion)",
                "where c.cell_line=~'CCLE_095'",
                "with c,f order by ID(f)",
                "match (g1:Gene)-[:HAD]->(f)-[:WITH]->(g2:Gene) ",
                "where any(x in f.description where x=~ '.*') and any(y in f.fusion_finding_method where y=~'.*') and (f.predicted_effect[0]=~'.*' and f.predicted_effect[1]='UTR')",
                "match (f)-[:AT_CHROMOSOME]->(ch1:Chromosome)-[:OF_GENE]->(g1)",
                "with c,f,g1,g2,ch1",
                "match (f)-[:AT_CHROMOSOME]->(ch2:Chromosome)-[:OF_GENE]->(g2)",
                "with c,f,g1,g2,ch1,ch2",
                "optional match (t1:Transcript)-[:IN_COUPLE]->(co:Couple)-[:WITH_OTHER_TRANSCRIPT]->(t2:Transcript),(co)-[:WITH_PROTEIN]->(p:Protein),(f)-[:WITH_TRANS_COUPLE]->(co)",
                "with c,f,g1,g2,ch1,ch2,collect(distinct {t1:t1,t2:t2,co:co,p:p}) as couple_tp",
                "optional match (f)-[:AT_EXON]->(e1:Exon)-[:IN_GENE]->(g1)",
                "with c,f,g1,g2,ch1,ch2,couple_tp,e1",
                "optional match (f)-[:AT_EXON]->(e2:Exon)-[:IN_GENE]->(g2)",
                "with count(f) as total",
                " ",
                "match (c:CellLine)-[:HAPPEN]->(f:Fusion)",
                "where c.cell_line=~'CCLE_095'",
                "with total,c,f order by ID(f)",
                "match (g1:Gene)-[:HAD]->(f)-[:WITH]->(g2:Gene) ",
                "where any(x in f.description where x=~ '.*') and any(y in f.fusion_finding_method where y=~'.*') and (f.predicted_effect[0]=~'.*' and f.predicted_effect[1]='UTR)",
                "match (f)-[:AT_CHROMOSOME]->(ch1:Chromosome)-[:OF_GENE]->(g1)",
                "with total,c,f,g1,g2,ch1",
                "match (f)-[:AT_CHROMOSOME]->(ch2:Chromosome)-[:OF_GENE]->(g2)",
                "with total,c,f,g1,g2,ch1,ch2",
                "optional match (t1:Transcript)-[:IN_COUPLE]->(co:Couple)-[:WITH_OTHER_TRANSCRIPT]->(t2:Transcript),(co)-[:WITH_PROTEIN]->(p:Protein),(f)-[:WITH_TRANS_COUPLE]->(co)",
                "with total,c,f,g1,g2,ch1,ch2,collect(distinct {t1:t1,t2:t2,co:co,p:p}) as couple_tp",
                "optional match (f)-[:AT_EXON]->(e1:Exon)-[:IN_GENE]->(g1)",
                "with total,c,f,g1,g2,ch1,ch2,couple_tp,e1",
                "optional match (f)-[:AT_EXON]->(e2:Exon)-[:IN_GENE]->(g2)",
                "return {cell_line: c,fusion: f,gene1: g1,gene2: g2, chromosome1: ch1,chromosome2: ch2,couple_tp: couple_tp, exon1: e1, exon2: e2, total: total}  order by ID(f) skip {query}.skip limit {query}.limit"
            ]
        },
        "transcript":{
            "transcript_specified_partner": [
                "match (c:CellLine)-[:HAPPEN]->(f:Fusion) where c.cell_line=~'CCLE_095'", 
                "with c,f order by ID(f)",
                "match (g1:Gene)-[:HAD]->(f)-[:WITH]->(g2:Gene)"  ,
                "with c,f,g1,g2" ,
                "match (f)-[:AT_CHROMOSOME]->(ch1:Chromosome)-[:OF_GENE]->(g1)",
                "with c,f,g1,g2,ch1",
                "match (f)-[:AT_CHROMOSOME]->(ch2:Chromosome)-[:OF_GENE]->(g2)",
                "with c,f,g1,g2,ch1,ch2",
                "match (t1:Transcript)-[:IN_COUPLE]->(co:Couple)-[:WITH_OTHER_TRANSCRIPT]->(t2:Transcript),(co)-[:WITH_PROTEIN]->(p:Protein),(f)-[:WITH_TRANS_COUPLE]->(co)",
                "where (t1.transcript_id=~'.*' and t1.strand=~'.*' and t1.position=~'.*' and t1.fusion_partner=~'5end') and (t2.transcript_id=~'.*' and t2.strand=~'.*'  and t2.position=~'.*' and t2.fusion_partner=~'3end')",
                "with c,f,g1,g2,ch1,ch2",
                "match (t1:Transcript)-[:IN_COUPLE]->(co:Couple)-[:WITH_OTHER_TRANSCRIPT]->(t2:Transcript),(co)-[:WITH_PROTEIN]->(p:Protein),(f)-[:WITH_TRANS_COUPLE]->(co)",
                "with c,f,g1,g2,ch1,ch2,collect(distinct {t1:t1,t2:t2,co:co,p:p}) as couple_tp",
                "optional match (f)-[:AT_EXON]->(e1:Exon)-[:IN_GENE]->(g1)",
                "with c,f,g1,g2,ch1,ch2,couple_tp,e1",
                "optional match (f)-[:AT_EXON]->(e2:Exon)-[:IN_GENE]->(g2)",
                "with count(f) as total",
                " ",
                "match (c:CellLine)-[:HAPPEN]->(f:Fusion) where c.cell_line=~'CCLE_095' ",
                "with total,c,f order by ID(f)",
                "match (g1:Gene)-[:HAD]->(f)-[:WITH]->(g2:Gene)"  ,
                "with total,c,f,g1,g2" ,
                "match (f)-[:AT_CHROMOSOME]->(ch1:Chromosome)-[:OF_GENE]->(g1)",
                "with total,c,f,g1,g2,ch1",
                "match (f)-[:AT_CHROMOSOME]->(ch2:Chromosome)-[:OF_GENE]->(g2)",
                "with total,c,f,g1,g2,ch1,ch2",
                "match (t1:Transcript)-[:IN_COUPLE]->(co:Couple)-[:WITH_OTHER_TRANSCRIPT]->(t2:Transcript),(co)-[:WITH_PROTEIN]->(p:Protein),(f)-[:WITH_TRANS_COUPLE]->(co)",
                "where (t1.transcript_id=~'.*' and t1.strand=~'.*' and t1.position=~'.*' and t1.fusion_partner=~'5end') and (t2.transcript_id=~'.*' and t2.strand=~'.*'  and t2.position=~'.*' and t2.fusion_partner=~'3end')",
                "with total,c,f,g1,g2,ch1,ch2",
                "match (t1:Transcript)-[:IN_COUPLE]->(co:Couple)-[:WITH_OTHER_TRANSCRIPT]->(t2:Transcript),(co)-[:WITH_PROTEIN]->(p:Protein),(f)-[:WITH_TRANS_COUPLE]->(co)",
                "with total,c,f,g1,g2,ch1,ch2,collect(distinct {t1:t1,t2:t2,co:co,p:p}) as couple_tp",
                "optional match (f)-[:AT_EXON]->(e1:Exon)-[:IN_GENE]->(g1)",
                "with total,c,f,g1,g2,ch1,ch2,couple_tp,e1",
                "optional match (f)-[:AT_EXON]->(e2:Exon)-[:IN_GENE]->(g2)",
                "return {cell_line: c,fusion: f,gene1: g1,gene2: g2, chromosome1: ch1,chromosome2: ch2,couple_tp: couple_tp, exon1: e1, exon2: e2, total: total}  order by ID(f) skip {query}.skip limit {query}.limit"
            ],
            "transcript_any_partner": [
                "match (c:CellLine)-[:HAPPEN]->(f:Fusion) where c.cell_line=~'CCLE_095'", 
                "with c,f order by ID(f)",
                "match (g1:Gene)-[:HAD]->(f)-[:WITH]->(g2:Gene)"  ,
                "with c,f,g1,g2" ,
                "match (f)-[:AT_CHROMOSOME]->(ch1:Chromosome)-[:OF_GENE]->(g1)",
                "with c,f,g1,g2,ch1",
                "match (f)-[:AT_CHROMOSOME]->(ch2:Chromosome)-[:OF_GENE]->(g2)",
                "with c,f,g1,g2,ch1,ch2",
                "match (t1:Transcript)-[:IN_COUPLE]->(co:Couple)-[:WITH_OTHER_TRANSCRIPT]->(t2:Transcript),(co)-[:WITH_PROTEIN]->(p:Protein),(f)-[:WITH_TRANS_COUPLE]->(co)",
                "where (t1.transcript_id=~'.*' and t1.strand=~'.*' and t1.position=~'.*' and t1.fusion_partner=~'5end') or (t2.transcript_id=~'.*' and t2.strand=~'.*'  and t2.position=~'.*' and t2.fusion_partner=~'3end')",
                "with c,f,g1,g2,ch1,ch2",
                "match (t1:Transcript)-[:IN_COUPLE]->(co:Couple)-[:WITH_OTHER_TRANSCRIPT]->(t2:Transcript),(co)-[:WITH_PROTEIN]->(p:Protein),(f)-[:WITH_TRANS_COUPLE]->(co)",
                "with c,f,g1,g2,ch1,ch2,collect(distinct {t1:t1,t2:t2,co:co,p:p}) as couple_tp",
                "optional match (f)-[:AT_EXON]->(e1:Exon)-[:IN_GENE]->(g1)",
                "with c,f,g1,g2,ch1,ch2,couple_tp,e1",
                "optional match (f)-[:AT_EXON]->(e2:Exon)-[:IN_GENE]->(g2)",
                "with count(f) as total",
                " ",
                "match (c:CellLine)-[:HAPPEN]->(f:Fusion) where c.cell_line=~'CCLE_095' ",
                "with total,c,f order by ID(f)",
                "match (g1:Gene)-[:HAD]->(f)-[:WITH]->(g2:Gene)"  ,
                "with total,c,f,g1,g2" ,
                "match (f)-[:AT_CHROMOSOME]->(ch1:Chromosome)-[:OF_GENE]->(g1)",
                "with total,c,f,g1,g2,ch1",
                "match (f)-[:AT_CHROMOSOME]->(ch2:Chromosome)-[:OF_GENE]->(g2)",
                "with total,c,f,g1,g2,ch1,ch2",
                "match (t1:Transcript)-[:IN_COUPLE]->(co:Couple)-[:WITH_OTHER_TRANSCRIPT]->(t2:Transcript),(co)-[:WITH_PROTEIN]->(p:Protein),(f)-[:WITH_TRANS_COUPLE]->(co)",
                "where (t1.transcript_id=~'.*' and t1.strand=~'.*' and t1.position=~'.*' and t1.fusion_partner=~'5end') or (t2.transcript_id=~'.*' and t2.strand=~'.*'  and t2.position=~'.*' and t2.fusion_partner=~'3end')",
                "with total,c,f,g1,g2,ch1,ch2",
                "match (t1:Transcript)-[:IN_COUPLE]->(co:Couple)-[:WITH_OTHER_TRANSCRIPT]->(t2:Transcript),(co)-[:WITH_PROTEIN]->(p:Protein),(f)-[:WITH_TRANS_COUPLE]->(co)",
                "with total,c,f,g1,g2,ch1,ch2,collect(distinct {t1:t1,t2:t2,co:co,p:p}) as couple_tp",
                "optional match (f)-[:AT_EXON]->(e1:Exon)-[:IN_GENE]->(g1)",
                "with total,c,f,g1,g2,ch1,ch2,couple_tp,e1",
                "optional match (f)-[:AT_EXON]->(e2:Exon)-[:IN_GENE]->(g2)",
                "return {cell_line: c,fusion: f,gene1: g1,gene2: g2, chromosome1: ch1,chromosome2: ch2,couple_tp: couple_tp, exon1: e1, exon2: e2, total: total}  order by ID(f) skip {query}.skip limit {query}.limit"
            ]
        }
    }
}